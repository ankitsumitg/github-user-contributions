# This workflow will install Python dependencies, build api with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python_build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron:  '0 0 * * *'    # Runs at 00:00 UTC everyday
  workflow_run:
    workflows: [ "build_from_comment" ]
    types:
      - completed
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    if: ${{ github.event_name != 'workflow_run'  || ( github.event.workflow_run.conclusion == 'success' && github.event_name == 'workflow_run' ) }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Update with python
      run: |
        echo Via ${{ github.event_name }}
        python get-contributions.py
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Update api folder v1" || echo "No changes to commit ü•µ"
        git push
        echo "Bye üëãüèª"

